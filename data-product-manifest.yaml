---
version: 0.0.1
discoveryPort:
  name: logical schema urn - webhooks
  description: The DP to verify the overwrite strategy
  category: customer
  image: http://www.google.com
  autofillUserinfo: true
  tags:
    - Madrid
    - House Rental
  extra: {}
inputPorts:
  - alias: usersS3_input_port
    description: string
    tags: []
    extra: {}
    syncType: pull
    type: s3
    sourceUrn: urn:dv:datasource:18896dde-fbf6-47f0-ab76-fb10ff9a47c4
    entityId:
      alias: usersS3
      createEntity: true
      entityName: houses_Madrid.csv
      type: s3-bucket
      entityPath: s3a://dp-input-bucket/property_rental/houses_Madrid.csv
      entityFilterPatternMatch: "*.csv"
      sourceSchemaUrn: urn:dv:schema:9d4716d4
      projectSchemaUrn: urn:dv:schema:9d4716d6
      fileFormat: csv
      delimiter: ","
      header: true
      filter: ""
      processingTimeColumn:
        - created_date
      actualTimeColumn:
        - created_date
      projection:
        - legal_entity
        - store_group_name
stateManagement:
  alias: usersS3
  refreshInterval: 30 11 * * *
  updateStrategy: overwrite
  productStoreState:
    logicalSchema:
      type: object
      properties:
        legal_entity:
          type: number
          description: ID of the property
        store_name:
          type: String
        store_id:
          type: number
        createdDate:
          type: datetime
          description: To store the creation date
        expiry_date:
          type: datetime
      required:
        - legal_entity
        - store_name
        - store_id
    retentionVersions: "10"
    updateStrategyOptions:
    - entityRef: urn:dv:datasource:6d4714c3
      uniqueKeyColumns:
        - sq_mt_useful
      changeTrackColumns:
        - nothing
transformation:
  sql: SELECT * FROM usersS3
outputPort:
  channels:
    - channelType: REST-API
      queryType: SQL
    - channelType: JDBC
      queryType: SQL
